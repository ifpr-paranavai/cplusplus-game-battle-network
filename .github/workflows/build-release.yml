name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Set up MinGW
      shell: cmd
      run: |
        choco install mingw -y
        set PATH=%PATH%;C:\ProgramData\chocolatey\bin
        set PATH=%PATH%;C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin

    - name: Read version from file
      id: get_version
      shell: pwsh
      run: echo "VERSION=$(Get-Content VERSION)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

    - name: Build the project
      shell: pwsh
      run: |
        cd ${{ github.workspace }}
        mingw32-make -f makefile

    - name: Zip folder on Windows
      shell: pwsh
      run: Compress-Archive -Path ".\\bin-windows" -DestinationPath "release-windows-${{ env.VERSION }}.zip"

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: release-windows-${{ env.VERSION }}
        path: release-windows-${{ env.VERSION }}.zip


  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up environment
      run: 
        sudo apt-get install -y build-essential pkg-config libsdl2-dev libsdl2-mixer-dev libsdl2-image-dev libsdl2-ttf-dev

    - name: Get version from file
      id: get_version
      run: |
        if [ -f VERSION ]; then
          echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
        else
          echo "VERSION file not found! Exiting."
          exit 1
        fi

    - name: Build project
      run: make -f makefile-linux

    - name: Archive bin directory
      run: |
        zip -r release-linux-${{ env.VERSION }}.zip ./bin-linux
      shell: bash

    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: release-linux-${{ env.VERSION }}
        path: release-linux-${{ env.VERSION }}.zip


  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]  

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version from file
      id: get_version
      run: |
        if [ -f VERSION ]; then
          echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
        else
          echo "VERSION file not found! Exiting."
          exit 1
        fi

    - name: Download Windows Artifact
      uses: actions/download-artifact@v4.1.8
      with:
        name: release-windows-${{ env.VERSION }}

    - name: Download Linux Artifact
      uses: actions/download-artifact@v4.1.8
      with:
        name: release-linux-${{ env.VERSION }}
        
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release v${{ env.VERSION }}
        body: |
          Release for version ${{ env.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-windows-${{ env.VERSION }}.zip
        asset_name: release-windows-${{ env.VERSION }}.zip
        asset_content_type: application/zip

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-linux-${{ env.VERSION }}.zip
        asset_name: release-linux-${{ env.VERSION }}.zip
        asset_content_type: application/zip
